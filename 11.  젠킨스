# 젠킨스
```
   https://hub.docker.com
   https://github.com/jenkinsci/docker
   
   docker run -itd --name jenkins-server -h jenkins -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11
   docker run -itd --name jenkins-server -h jenkins -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk11

   소스코드
      https://github.com/joneconsulting/cicd-web-project
   
   Jenkins Docker 컨테이너에 터널링으로 접속
      docker container exec -it jenkins-server bash (OS에서 입력)
      cd /var/jenkins_home/workspace (컨테이너에서 입력)
```

### 설치
```
   docker run -it \
   --name jenkins -h jenins \
   -p 8080:8080 -p 50000:50000 \
   -v /jenkins:/var/jenkins_home \   <= 도커에서 할 경우 생략가능
   -u root \
   --restart=on-failure \
   -d jenkins/jenkins:lts-jdk11

   $ docker + ssh server for win, mac
   docker run -it \
   --privileged \
   --name docker-server -h docker-server \
   -p 10022:22 -p 8081:8080 \
   -e container=docker \
   -v /sys/fs/cgroup:/sys/fs/cgroup \
   -d edowon0623/docker:latest /usr/sbin/init
   
   ssh root@localhost -p 10022 
   // ssh root@localhost:10022
   기본패스워드: P@ssw0rd
   
   
   $ doker + ssh server for M1
   docker run -it \
   --privileged \
   --name docker-server -h docker-server \
   -p 10022:22 -p 8081:8080 \
   -e container=docker \
   -v /sys/fs/cgroup:/sys/fs/cgroup \
   -d edowon0623/docker-server:m1 /usr/sbin/init
```

### docker 기본 명령어
```
   docker images
   docker conatainer ls
   docker log ID or host_name   // 초기 패스워드 보기 
   docker exec -it  (container ID) /bin/bash   // 도커 내부 접속 
```

### 구성
```
   좌측메뉴 젠킨스관리 > Global Tool Configuration
      > jdk HOME 경로 설정
         초기설치에는 경로가 잡혀 있어 필요 없음   
         ( which jdk 로 결로를 찾을 수 있음 )
      > Git 설정
        Dashboard > Jenkins Manage > Jenkins Plugin Manage > availble > GitHub
        ( 최근 기본으로 설치되어 있음 )
      > maven or gradle 설정
        Dashboard > Jenkins Manage > Jenkins Plugin Manage > availble > maven
        maven integration  
```

### item 설정
```
   1. item 클릭 > 프로젝트명 작성 > Build > execute shell 선택
      ( 로그에서 workplace 경로를 확인 할 수 있음 )
      echo "Welcome"
      javac --version
      git   --version
      mvn   --version
      
   2. 
   
```
